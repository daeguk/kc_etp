<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="index">  
    <!--
    * 가장 최근 지수 정보(지수 코드가 가장큰 지수 선택)
    -->
    <select id="indexSummaryLately">
      SELECT BAS.F16013
            ,BAS.F16002
            ,BAS.LARGE_TYPE
            ,BAS.MIDDLE_TYPE
            ,BAS.MARKET_ID
            ,HIS.F12506
            ,HIS.F15009
            ,HIS.F15010
            ,HIS.F15011
            ,HIS.F15001
            ,HIS.F15472
            ,HIS.F15006
            ,HIS.F15004
            ,HIS.F15015
            ,HIS.F15023 
        FROM (SELECT * 
                FROM kc_etp.td_index_basic
                WHERE F16013 = (SELECT MAX(F16013)
                                    FROM kc_etp.td_index_basic
                                    WHERE large_type=#{large_type}
                                )
                ) BAS,
                kc_etp.td_index_hist HIS
        WHERE BAS.F16013 = HIS.F16013
          AND BAS.LARGE_TYPE = #{large_type}
          AND BAS.MARKET_ID = HIS.MARKET_ID
        ORDER BY HIS.F12506 DESC
        limit 0, 1

    </select>
  
    <!--
    * 지수 정보 공개 요청 리스트
    -->
    <select id="indexReqList">
      SELECT BAS.F16002
            ,BAS.F16013  
            ,REQ.INST_CD
            ,REQ.INST_NAME
            ,date_format(REQ.REG_TIME, '%Y-%m-%d') REG_TIME
            ,REQ.REQ_FLAG
            ,REQ.REG_ID
        FROM (SELECT A.INST_CD
				   ,A.REG_TIME
                   ,A.REQ_FLAG
                   ,A.REG_ID
                   ,A.JISU_ID
                   ,B.INST_NAME 
          FROM tm_jisu_share_req A,
                    tm_user_domain B
          WHERE A.INST_CD = B.INST_CD) REQ
         LEFT OUTER JOIN td_index_basic BAS	
           ON BAS.F16013 = REQ.JISU_ID
      WHERE BAS.F16013 = REQ.JISU_ID
        AND BAS.large_type = #{large_type}
    <if test="jisu_cd != null and jisu_cd !=''">
        AND BAS.F16013 = #{jisu_cd}
    </if>
        AND (REQ.REQ_FLAG = '1' OR  REQ.REQ_FLAG = '0')
    </select>


    <!--
    * 지수 정보 구독현황 리스트
    -->
    <select id="getindexSubscribeList">
      SELECT BAS.F16002
            ,BAS.F16013  
            ,REQ.INST_CD
            ,REQ.INST_NAME
            ,date_format(REQ.REG_TIME, '%Y-%m-%d') REG_TIME
            ,REQ.REQ_FLAG
            ,REQ.REG_ID
        FROM (SELECT A.INST_CD
				   ,A.REG_TIME
                   ,A.REQ_FLAG
                   ,A.REG_ID
                   ,A.JISU_ID
                   ,B.INST_NAME 
          FROM tm_jisu_share_req A,
                    tm_user_domain B
          WHERE A.INST_CD = B.INST_CD) REQ
         LEFT OUTER JOIN td_index_basic BAS	
           ON BAS.F16013 = REQ.JISU_ID
      WHERE BAS.F16013 = REQ.JISU_ID
        AND BAS.large_type = #{large_type}
    <if test="jisu_cd != null and jisu_cd !=''">
        AND BAS.F16013 = #{jisu_cd}
    </if>
        AND REQ.REQ_FLAG = '2'
    </select>
    <!--
    * 지수 정보 공개 요청 처리 
    -->
    <update id="updateIndexOpenYn">
      UPDATE tm_jisu_share_req 
         <set>
             REQ_FLAG = #{FLAG}
             ,UPD_ID = #{UPD_ID}
             ,UPD_TIME = NOW() 
         </set>
       WHERE JISU_ID = #{JISU_ID}
         AND INST_CD = #{INST_CD}
    </update>

    <!-- 지수 목록 정보(로그인 정보엔 맞는 데이터 FNGUIDE, WISEFN-->
    <select id="getInfoIndexList">
        <![CDATA[  
        SELECT A.JISU_CD
              ,A.JISU_NM
              ,date_format(A.IP_DT, '%Y-%m-%d') IP_DT
              ,if(A.ANNO_DATE is null, '미발표', '발표') ANNO_YN
              ,A.INDEX_CAL_METHOD
              ,A.MARKET_ID
              ,A.ETP_MARKET_ID
              ,A.INST_CNT
              ,(SELECT GROUP_CONCAT(F16002)
                  FROM td_etp_basic
		         WHERE F34239 = A.ETP_MARKET_ID
	               AND F16257 = A.JISU_CD) as ETP_NM
        FROM (SELECT BAS.F16013 JISU_CD
                    ,BAS.F16002 JISU_NM
                    ,BAS.F12506 IP_DT
                    ,BAS.ANNO_DATE
                    ,BAS.INDEX_CAL_METHOD
                    ,BAS.MARKET_ID
                    ,CAST(substr(BAS.MARKET_ID, 2) AS SIGNED) ETP_MARKET_ID
                    ,(SELECT COUNT(*) FROM kc_etp.tm_jisu_share_req
                        WHERE JISU_ID = BAS.F16013
                        AND REQ_FLAG = '2') INST_CNT
                FROM td_index_basic BAS
               WHERE large_type = #{large_type}) A;
        ]]> 
    </select>


    <!-- 성과가 가장 좋은 지수-->
    <select id="indexSummaryResult">
    <![CDATA[
        SELECT BAS.F16013
            ,BAS.F16002
            ,BAS.LARGE_TYPE
            ,BAS.MIDDLE_TYPE
            ,BAS.MARKET_ID
            ,HIS.F12506
            ,HIS.F15009
            ,HIS.F15010
            ,HIS.F15011
            ,HIS.F15001
            ,HIS.F15472
            ,HIS.F15006
            ,HIS.F15004
            ,HIS.F15015
            ,HIS.F15023 
        FROM (SELECT A.F16013
                    ,A.F16002
                    ,A.LARGE_TYPE
                    ,A.MIDDLE_TYPE
                    ,A.MARKET_ID
                FROM kc_etp.td_index_basic A,
                    (SELECT  A.F16013
                        FROM (SELECT basic.F16013
                                    , (SELECT F15009
                                        FROM (SELECT F16013, F12506, F15009
                                        , (CASE @vF16013 WHEN a.F16013 THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) rnum 
                                        , (@vF16013:= a.F16013) vF16013
                                    FROM td_index_hist a
                                    INNER JOIN (SELECT @vF16013:='', @rownum:=0 FROM DUAL) b
                                    where  F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 YEAR), '%Y%m%d')
                                    order by F16013, F12506 DESC) A
                                    where A.rnum = 1
                                    And A.F16013 = basic.F16013) maxData
                                    , (SELECT F15009 
                                        FROM (SELECT F16013, F12506, F15009
                                                    , (CASE @vF16013 WHEN a.F16013 THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) rnum 
                                                    , (@vF16013:= a.F16013) vF16013
                                                FROM td_index_hist a
                                                INNER JOIN (SELECT @vF16013:='', @rownum:=0 FROM DUAL) b
                                                where F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 YEAR), '%Y%m%d')
                                                order by F16013, F12506 ASC) A
                                        where A.rnum = 1
                                        and A.F16013 = basic.F16013) minData
                                FROM td_index_basic basic
                                WHERE basic.large_type=#{large_type}) A
                                group by F16013
                        order by max(ifnull(A.maxData/A.minData, 0)) desc
                        limit 0, 1)B
                WHERE A.F16013 = B.F16013
            ) BAS,
            kc_etp.td_index_hist HIS
        WHERE BAS.F16013 = HIS.F16013
            AND BAS.MARKET_ID = HIS.MARKET_ID
            AND BAS.large_type=#{large_type}
        ORDER BY HIS.F12506 DESC
        limit 0, 1
    ]]>
    </select>
  
    <!-- 1년간 지수 정보(그래프정보)-->
    <select id="selectIndexSummaryHist">
    <![CDATA[
        SELECT a.F12506 as trd_dd, a.F15009 as close_idx
          FROM td_index_hist a
         INNER JOIN td_index_basic b
           on  a.F16013 = b.F16013
		  and  a.market_id = b.market_id
          and  b.large_type = #{large_type}
         WHERE a.F12506 >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 YEAR), '%Y%m%d')
           AND a.F16013 = #{JISU_ID}
    ]]>
    </select>

    <!-- 인덱스 기본정보-->
    <select id="getIndexBaseInfo">
    <![CDATA[
        SELECT date_format(BAS.F12506, "%Y.%m.%d") F12506
              ,BAS.F16013
              ,BAS.F16002
              ,BAS.F15009
              ,BAS.F15010
              ,BAS.F15011
              ,format(BAS.F15001, '###,###,###') F15001
              ,format(BAS.F15007, '###,###,###') F15007
              ,format(BAS.F15015, '###,###,###') F15015
              ,format(BAS.F15023, '###,###,###') F15023
              ,BAS.F15472
              ,BAS.F15004
              ,BAS.F15006
              ,format(BAS.F15028, '###,###,###') F15028
              ,BAS.LARGE_TYPE
              ,BAS.MIDDLE_TYPE
              ,BAS.MARKET_ID
              ,BAS.STD_INDEX
              ,date_format(BAS.STD_DATE, "%Y.%m.%d") STD_DATE
              ,date_format(BAS.ANNO_DATE, "%Y.%m.%d") ANNO_DATE
              ,BAS.INDEX_CAL_METHOD
              ,BAS.STD_CAPITAL
              ,BAS.FIXED_CASH
              ,BAS.FLOWRATE_YN
        FROM  td_index_basic BAS
        WHERE BAS.F16013 = #{jisu_cd}
          and BAS.MARKET_ID = #{market_id}
          AND BAS.large_type = #{large_type}
    ]]>
    </select>

    <!-- 기간 지수와 ETP 정보(그래프정보)-->
    <select id="getIndexEtpHistoryData">
    <![CDATA[

        SELECT INDX.trd_dd, ifnull(INDX.close_idx,0) close_idx, ifnull(ETP.ept_close_idx, 0) ept_close_idx, INDX.INDEX_NM, ETP.ETP_NM
            FROM(SELECT B.F12506, date_format(B.F12506, "%Y.%m.%d") as trd_dd, B.F15001 as close_idx, A.F16002 as INDEX_NM
                    FROM td_index_basic A, 
                        td_index_hist B
                    WHERE A.F16013 = B.F16013
                    AND A.MARKET_ID = B.MARKET_ID
                    AND A.F16013 = #{jisu_cd}
                    AND A.MARKET_ID = #{market_id}
                    AND A.large_type = #{large_type}) INDX
         Left outer Join   
                (select hist.F12506, date_format(hist.F12506, "%Y.%m.%d") as trd_dd, hist.F15001 as ept_close_idx, base.F16002 ETP_NM
                    from (select max(a.F15028),  a.F16012, a.F16013, a.F16002 
                            FROM kc_etp.td_etp_basic a
                            WHERE a.F34239 = CAST(substr(#{market_id}, 2) AS SIGNED) 
                            AND a.F16257 = #{jisu_cd}
                        ) base
                inner join kc_etp.td_etp_hist hist
                    on base.F16013 = hist.F16013) ETP
            on INDX.trd_dd = ETP.trd_dd
    ]]>
    <choose>
        <when test="term != null and jisu_cd =='1D'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 DAY), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='1W'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 WEEK), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='1M'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 MONTH), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='3M'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 3 MONTH), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='6M'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 6 MONTH), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='1Y'">
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 YEAR), '%Y%m%d')
        </when>
        <when test="term != null and jisu_cd =='TOTAL'">
            
        </when>
        <otherwise>
            WHERE INDX.F12506 >= date_format(DATE_SUB(now(), INTERVAL 1 MONTH), '%Y%m%d')
        </otherwise>
    </choose>
    </select>

  


    <!--지수에 속한 ETP 정보-->
    <select id="getIndexInEtpInfo">
      SELECT base.F12506
            ,base.F16012
            ,base.F16013
            ,base.F16002
            ,base.F16003
            ,base.F16017
            ,base.F15001
            ,base.F15472
            ,base.F15004
            ,base.F15006
            ,base.F15009
            ,base.F15010
            ,base.F15011
            ,base.F15015
            ,base.F15023
            ,base.F15028
            ,base.F15029
            ,base.F30812
            ,base.F30813
            ,base.F18438
            ,base.F16143
            ,base.F16073
            ,base.F15007
            ,base.F16493
            ,base.F15301
            ,base.F15302
            ,base.F15303
            ,base.F15304
            ,base.F15305
            ,base.F30818
            ,base.F15318
            ,base.F16497
            ,base.F31892
            ,base.F18450
            ,base.F18001
            ,base.F16500
            ,base.F33307
            ,base.F33308
            ,base.F33951
            ,base.F15319
            ,base.F30823
            ,base.F15602
            ,base.F15631
            ,base.F15632
            ,base.F15633
            ,base.F19288
            ,base.F34515
            ,base.F16499
            ,base.F03329
            ,base.F18439
            ,base.F16109
            ,base.F16257
            ,base.F34777
            ,base.F34521
            ,base.F34776
            ,base.F34514
            ,base.F34239
            ,base.F34241
            ,base.F34769
            ,base.F34770
            ,base.F34771
            ,base.F34772
            ,base.F34775
            ,base.F34778
            ,base.F34779
            ,base.F34780
            ,base.F34781
            ,base.F34782
            ,base.F34783
            ,base.F33960
            ,base.F33961
        FROM kc_etp.td_etp_basic base
        WHERE base.F34239 = CAST(substr(#{market_id}, 2) AS SIGNED) 
        AND base.F16257 = #{jisu_cd}
    </select>

    <!--지수에 속한 ETP 리스트-->
    <select id="getETFList">
      SELECT base.F12506
            ,base.F16012
            ,base.F16013 as JISU_CD
            ,base.F16002 as JISU_NM
            ,base.F16003
            ,base.F16017
            ,base.F15001
            ,base.F15472
            ,base.F15004
            ,base.F15006
            ,base.F15009
            ,base.F15010
            ,base.F15011
            ,base.F15015
            ,base.F15023
            ,base.F15028
            ,base.F15029
            ,base.F30812
            ,base.F30813
            ,base.F18438
            ,base.F16143
            ,base.F16073
            ,base.F15007
            ,base.F16493
            ,base.F15301
            ,base.F15302
            ,base.F15303
            ,base.F15304
            ,base.F15305
            ,base.F30818
            ,base.F15318
            ,base.F16497
            ,base.F31892
            ,base.F18450
            ,base.F18001
            ,base.F16500
            ,base.F33307
            ,base.F33308
            ,base.F33951
            ,base.F15319
            ,base.F30823
            ,base.F15602
            ,base.F15631
            ,base.F15632
            ,base.F15633
            ,base.F19288
            ,base.F34515
            ,base.F16499
            ,base.F03329
            ,base.F18439
            ,base.F16109
            ,base.F16257
            ,base.F34777
            ,base.F34521
            ,base.F34776
            ,base.F34514
            ,base.F34239
            ,base.F34241
            ,base.F34769
            ,base.F34770
            ,base.F34771
            ,base.F34772
            ,base.F34775
            ,base.F34778
            ,base.F34779
            ,base.F34780
            ,base.F34781
            ,base.F34782
            ,base.F34783
            ,base.F33960
            ,base.F33961
        FROM kc_etp.td_etp_basic base
       where (F16493 = '1' OR F16493 = '2') 
    </select>

    <!--지수에 속한 ETN 리스트-->
    <select id="getETNList">
      SELECT base.F12506
            ,base.F16012
            ,base.F16013 as JISU_CD
            ,base.F16002 as JISU_NM
            ,base.F16003
            ,base.F16017
            ,base.F15001
            ,base.F15472
            ,base.F15004
            ,base.F15006
            ,base.F15009
            ,base.F15010
            ,base.F15011
            ,base.F15015
            ,base.F15023
            ,base.F15028
            ,base.F15029
            ,base.F30812
            ,base.F30813
            ,base.F18438
            ,base.F16143
            ,base.F16073
            ,base.F15007
            ,base.F16493
            ,base.F15301
            ,base.F15302
            ,base.F15303
            ,base.F15304
            ,base.F15305
            ,base.F30818
            ,base.F15318
            ,base.F16497
            ,base.F31892
            ,base.F18450
            ,base.F18001
            ,base.F16500
            ,base.F33307
            ,base.F33308
            ,base.F33951
            ,base.F15319
            ,base.F30823
            ,base.F15602
            ,base.F15631
            ,base.F15632
            ,base.F15633
            ,base.F19288
            ,base.F34515
            ,base.F16499
            ,base.F03329
            ,base.F18439
            ,base.F16109
            ,base.F16257
            ,base.F34777
            ,base.F34521
            ,base.F34776
            ,base.F34514
            ,base.F34239
            ,base.F34241
            ,base.F34769
            ,base.F34770
            ,base.F34771
            ,base.F34772
            ,base.F34775
            ,base.F34778
            ,base.F34779
            ,base.F34780
            ,base.F34781
            ,base.F34782
            ,base.F34783
            ,base.F33960
            ,base.F33961
        FROM kc_etp.td_etp_basic base
       where (F16493 = '3' OR F16493 = '4') 
    </select>

    <!--비중 정보 리스트-->
    <select id="getIndexImportanceList">
    <![CDATA[
       SELECT ITEM.ISIN_CODE
            , ITEM.JOING_NM
            , (ITEM.ITEM_AMT/TOT_ITEM.TOT_AMT) * 100 PERCNT
            , ITEM.GUBUN   	 
        FROM(SELECT MAP.ISIN_CODE
                    ,MAP.F16002 JOING_NM
                    ,ROUND((COMP.F03003 * COMP.F30812 * COMP.F30813 * COMP.MAP.CEILING_PERCNT * MAP.STYLE_INCLUD_PERCNT)) ITEM_AMT
                    ,MAP.GUBUN
                    FROM (SELECT F12506
                                , ISIN_CODE
                                , UP_CODE
                                , CEILING_PERCNT
                                , STYLE_INCLUD_PERCNT
                                , GUBUN
                                , F16002
                            FROM (SELECT A.F12506
                                    , A.ISIN_CODE
                                    , A.UP_CODE
                                    , A.CEILING_PERCNT
                                    , A.STYLE_INCLUD_PERCNT
                                    , A.GUBUN
                                    , B.F16002
                                    , (CASE @vISIN_CODE WHEN A.ISIN_CODE THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) rnum
                                    , (@vISIN_CODE:=A.ISIN_CODE) vISIN_CODE
                                    FROM m168uidxmap A
                                INNER JOIN td_kspjong_basic B
                                    ON A.ISIN_CODE = B.F16012 
                                INNER JOIN (SELECT @vISIN_CODE:='', @rownum:=0 FROM DUAL) C
                                ORDER BY A.ISIN_CODE, A.F12506 DESC
                                ) a
                    WHERE a.rnum = 1
                    AND UP_CODE = CONCAT(IF(substr(#{jisu_cd}, 1, 2) = '60', 'MFI', 'WFN'), substr(#{jisu_cd}, 3))) MAP
                    INNER JOIN m168uidxcomp COMP
                    ON MAP.F12506 = COMP.F12506
                    AND MAP.ISIN_CODE = COMP.F16013
                    AND MAP.GUBUN = COMP.GUBUN) ITEM
        INNER JOIN (SELECT SUM(ROUND((COMP.F03003 * COMP.F30812 * COMP.F30813 * COMP.MAP.CEILING_PERCNT * MAP.STYLE_INCLUD_PERCNT))) TOT_AMT
                    FROM (SELECT F12506
                                , ISIN_CODE
                                , UP_CODE
                                , CEILING_PERCNT
                                , STYLE_INCLUD_PERCNT
                                , GUBUN
                                , F16002
                            FROM (SELECT A.F12506
                                    , A.ISIN_CODE
                                    , A.UP_CODE
                                    , A.CEILING_PERCNT
                                    , A.STYLE_INCLUD_PERCNT
                                    , A.GUBUN
                                    , B.F16002
                                    , (CASE @vISIN_CODE WHEN A.ISIN_CODE THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) rnum
                                    , (@vISIN_CODE:=A.ISIN_CODE) vISIN_CODE
                                    FROM m168uidxmap A
                                INNER JOIN td_kspjong_basic B
                                    ON A.ISIN_CODE = B.F16012 
                                INNER JOIN (SELECT @vISIN_CODE:='', @rownum:=0 FROM DUAL) C
                                ORDER BY A.ISIN_CODE, A.F12506 DESC
                                ) a
                    WHERE a.rnum = 1
                    AND UP_CODE = CONCAT(IF(substr(#{jisu_cd}, 1, 2) = '60', 'MFI', 'WFN'), substr(#{jisu_cd}, 3))) MAP
                    INNER JOIN m168uidxcomp COMP
                    ON MAP.F12506 = COMP.F12506
                    AND MAP.ISIN_CODE = COMP.F16013
                    AND MAP.GUBUN = COMP.GUBUN) TOT_ITEM
        order by ITEM.ITEM_AMT/TOT_ITEM.TOT_AMT desc
                    

    ]]>
    </select>

    <!--지수 상세 -> 분석정보 Performance 정보[선택한 지수정보, 지수에 속한 ETP 정보 4개 까지] -->
    <select id="getIndexAnalysisInfo">
    <![CDATA[
        SELECT base.F12506
                ,'' as F16012
                ,base.F16013
                ,base.F16002
                ,'189' Week1
                ,'6' Month1
                ,'24' Month3
                ,'4' YTD
                ,'1' Year1
                ,'24' Year3
                ,'4' Year5
                ,'1' Year10
          from kc_etp.td_index_basic base
         WHERE base.F16013 = #{jisu_cd}
           AND base.market_id = #{market_id}
        UNION ALL
        SELECT   base.F12506
                ,base.F16012
                ,base.F16013
                ,base.F16002   
                ,'189' Week1
                ,'6' Month1
                ,'24' Month3
                ,'4' YTD
                ,'1' Year1
                ,'24' Year3
                ,'4' Year5
                ,'1' Year10         
            FROM kc_etp.td_etp_basic base
            WHERE base.F34239 = CAST(substr(#{market_id}, 2) AS SIGNED) 
            AND base.F16257 = #{jisu_cd}
        limit 0, 4;
    ]]>    
    </select>
</mapper>