<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="simulation">

    <!--
    *   상위 그룹정보를 조회한다.
    *   2019-07-26  bkLove(촤병국)
    -->
    <select id="getInitGrpCd">
        SELECT      /* simulation.getInitGrpCd 상위 그룹정보를 조회한다. */

                    tm_simul_mast.grp_cd            AS  grp_cd              /* 그룹코드(상위코드) */
                ,   tm_simul_mast.scen_cd           AS  scen_cd             /* 시나리오 코드 */
                ,   tm_simul_mast.scen_name         AS  scen_name           /* 시나리오명 */

          FROM  tm_simul_mast

         WHERE  1 = 1
           AND  tm_simul_mast.grp_yn                =   '1'

         ORDER  BY      tm_simul_mast.scen_name
    </select>

    <!--
    *   next 시나리오명을 조회한다.
    *   2019-07-26  bkLove(촤병국)
    -->
    <select id="getNextScenName">
        SELECT      /* simulation.getNextScenName next 시나리오명을 조회한다. */

                    CONCAT(
                            #{search_scen_name}
                        ,   '-'
                        ,   CAST(
                                IFNULL(
                                        MAX( 
                                            REPLACE( 
                                                    SUBSTR(     tm_simul_mast.scen_name
                                                            ,   INSTR( tm_simul_mast.scen_name, #{search_scen_name} ) + LENGTH( #{search_scen_name} ) 
                                                    )
                                                ,   '-'
                                                ,   '' 
                                            ) 
                                        )
                                    ,   0
                                )   AS  UNSIGNED INTEGER 
                            ) + 1
                    )                               AS  next_scen_name

          FROM  tm_simul_mast

         WHERE  1 = 1
           AND  tm_simul_mast.scen_name             LIKE    CONCAT( #{search_scen_name}, '%' )        /* 시나리오명 */

                /* 검색문자열 이후 숫자만 추출 */
           AND  REPLACE( 
                                SUBSTR(     tm_simul_mast.scen_name
                                        ,   INSTR( tm_simul_mast.scen_name, #{search_scen_name} ) + LENGTH( #{search_scen_name} ) 
                                )
                            ,   '-'
                            ,   '' 
                )                                   REGEXP  ( '^[0-9]+$' )
    </select>    

    <!--
    *   시뮬레이션 공통코드 초기 데이터를 조회한다.
    *   2019-07-26  bkLove(촤병국)
    -->
    <select id="getInitData">
        SELECT      /* simulation.getInitData 시뮬레이션 공통코드 초기 데이터를 조회한다. */

                    tm_code_dtl.com_mst_cd          AS  com_mst_cd
                ,   tm_code_dtl.com_dtl_cd          AS  com_dtl_cd
                
                ,   tm_code_dtl.com_dtl_name        AS  com_dtl_name
                ,   tm_code_dtl.com_val01           AS  com_val01
                ,   tm_code_dtl.com_val02           AS  com_val02
                ,   tm_code_dtl.com_val03           AS  com_val03

          FROM          tm_code_mast
         INNER  JOIN    tm_code_dtl

                ON      tm_code_mast.com_mst_cd     =   tm_code_dtl.com_mst_cd

         WHERE  tm_code_mast.use_yn                 =   '1'
           AND  tm_code_dtl.use_yn                  =   '1'
           AND  tm_code_mast.com_mst_cd             IN
                (
                    <foreach    collection="arrComMstCd"   item="item"    index="index"   separator=" ," >
                        #{item}
                    </foreach>
                )
         ORDER  BY      tm_code_dtl.com_mst_cd
                    ,   tm_code_dtl.com_dtl_cd    
    </select>


    <!--
    *   시뮬레이션 시나리오 코드를 채번한다.
    *   2019-07-26  bkLove(촤병국)
    -->
    <select id="getScenCd">
        SELECT      /* simulation.getScenCd 시뮬레이션 시나리오 코드를 채번한다. */
                    LPAD(
                                /* 시나리오 코드 순번값 ( 기존 코드가 존재하지 않는 경우 - 그룹: 0, 비그룹: 100000 부터 시작 ) */
                                IFNULL(
                                        CAST( MAX( tm_simul_mast.scen_cd )  AS  UNSIGNED INTEGER  )
                                    ,   CASE    WHEN    /* 그룹인 경우 정해진 최초값(100000) 부터 시작 */
                                                        #{grp_yn}   =   '1'
                                                THEN    0
                                                ELSE    CAST( #{init_incre_grp_cd}   AS  UNSIGNED INTEGER  )
                                        END
                                )
                            +   /* 증가값 ( 그룹: 100000, 비그룹: 1 씩 증가 ) */
                                CASE    WHEN    /* 그룹인 경우 정해진 최초값(100000) 부터 시작 */
                                                #{grp_yn}   =   '1'
                                        THEN    CAST( #{init_incre_grp_cd}   AS  UNSIGNED INTEGER  )
                                        ELSE    1
                                END
                        ,   10
                        ,   '0' 
                    )                               AS  scen_cd             /* 시나리오 코드 */

          FROM  tm_simul_mast

         WHERE  1 = 1
           AND  tm_simul_mast.grp_yn                =   #{grp_yn}           /* 그룹여부(1-그룹) */
    </select>

    <!--
    *   시뮬레이션 시나리오 정렬순번을 조회한다.
    *   2019-07-26  bkLove(촤병국)
    -->
    <select id="getScenOrderNo">
        SELECT      /* simulation.getScenOrderNo 시뮬레이션 시나리오 정렬순번을 조회한다. */
                        IFNULL(
                                CAST( MAX( tm_simul_mast.scen_order_no )  AS  UNSIGNED INTEGER  )
                            ,   0
                        )
                    +   1                           AS  scen_order_no       /* 시나리오 정렬 순번 */

          FROM  tm_simul_mast

         WHERE  1 = 1
           AND  tm_simul_mast.grp_cd                =   #{grp_cd}           /* 그룹코드(상위코드) */
           AND  tm_simul_mast.scen_cd               =   #{scen_cd}          /* 시나리오 코드 */
    </select>    

    <!--
    * [tm_simul_mast] 테이블에 저장한다.
    * 2019-07-26  bkLove(촤병국)
    -->
    <insert     id="saveTmSimulMast">
    <![CDATA[
        INSERT  INTO    
        /* simulation.saveTmSimulMast      [tm_simul_mast] 테이블에 저장한다. */
        tm_simul_mast 
        ( 
                grp_cd                              /* 그룹코드(상위코드) */
            ,   scen_cd                             /* 시나리오 코드 */

            ,   scen_depth                          /* 시나리오 DEPTH */
            ,   scen_order_no                       /* 시나리오 정렬 순번 */
            ,   scen_name                           /* 시나리오명 */
            ,   grp_yn                              /* 그룹여부(1-그룹) */
            ,   start_year                          /* 시작년도 */
            ,   rebalance_cycle_cd                  /* 리밸런싱주기 (COM006) */
            ,   rebalance_date_cd                   /* 리밸런싱일자 (COM007) */
            ,   init_invest_money                   /* 초기투자금액 */
            ,   bench_mark_cd                       /* 벤치마크 (COM008) */
            ,   importance_method_cd                /* 비중설정방식 (COM009) */

            ,   reg_id                              /* 등록자 ID */
            ,   reg_time                            /* 등록시간 */
            ,   upd_id                              /* 수정자 ID */
            ,   upd_time                            /* 수정시간 */
        )
        VALUES    
        ( 
                #{grp_cd}                           /* 그룹코드(상위코드) */
            ,   #{scen_cd}                          /* 시나리오 코드 */

            ,   #{scen_depth}                       /* 시나리오 DEPTH */
            ,   #{scen_order_no}                    /* 시나리오 정렬 순번 */
            ,   #{scen_name}                        /* 시나리오명 */
            ,   #{grp_yn}                           /* 그룹여부(1-그룹) */
            ,   #{start_year}                       /* 시작년도 */
            ,   #{rebalance_cycle_cd}               /* 리밸런싱주기 (COM006) */
            ,   #{rebalance_date_cd}                /* 리밸런싱일자 (COM007) */
            ,   #{init_invest_money}                /* 초기투자금액 */
            ,   #{bench_mark_cd}                    /* 벤치마크 (COM008) */
            ,   #{importance_method_cd}             /* 비중설정방식 (COM009) */

            ,   #{user_id}                          /* 등록자 ID */
            ,   now()                               /* 등록시간 */
            ,   #{user_id}                          /* 수정자 ID */
            ,   now()                               /* 수정시간 */
        )
    ]]>
    </insert>

    <!--
    * [tm_simul_portfolio] 테이블에 저장한다.
    * 2019-07-26  bkLove(촤병국)
    -->
    <insert     id="saveTmSimulPortfolio">
    <![CDATA[
        INSERT  INTO    
        /* simulation.saveTmSimulPortfolio      [tm_simul_portfolio] 테이블에 저장한다. */
        tm_simul_portfolio 
        ( 
                grp_cd                              /* 그룹코드(상위코드) */
            ,   scen_cd                             /* 시나리오코드 */
            ,   F16316                              /* 구성종목코드 */

            ,   order_no                            /* 정렬 순번 */
            ,   importance                          /* 비중 */
            ,   jisu_rate                           /* 지수적용비율 */

            ,   reg_id                              /* 등록자 ID */
            ,   reg_time                            /* 등록시간 */
            ,   upd_id                              /* 수정자 ID */
            ,   upd_time                            /* 수정시간 */
        )
    ]]>
        VALUES
        <foreach    collection="dataLists"   item="data"     separator="," >
    <![CDATA[  
        ( 
                #{grp_cd}                           /* 그룹코드(상위코드) */
            ,   #{scen_cd}                          /* 시나리오코드 */
            ,   #{data.F16316}                      /* 구성종목코드 */

            ,   #{data.order_no}                    /* 정렬 순번 */
            ,   #{data.importance}                  /* 비중 */
            ,   #{data.jisu_rate}                   /* 지수적용비율 */

            ,   #{user_id}                          /* 등록자 ID */
            ,   now()                               /* 등록시간 */
            ,   #{user_id}                          /* 수정자 ID */
            ,   now()                               /* 수정시간 */
        )
    ]]>
        </foreach>

    </insert>


</mapper>